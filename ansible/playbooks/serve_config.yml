# serve_config.yml playbook

- name: Deploy serve_config application and configure base system
  hosts: serve_config_servers
  become: yes
  vars:
    app_dir: /opt/serve_config
    app_source_dir: "../../src/"
    config_source_dir: "../../config_files/"
    config_dir: /etc/serve_config  # Changed to /etc/serve_config

  tasks:
    # --------------------------------------------------------------------------
    # Dependencies Installation
    # --------------------------------------------------------------------------
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600 # Only update if cache is older than 1 hour

    - name: Install required system packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3-pip
          - avahi-daemon
        state: present

    # --------------------------------------------------------------------------
    # Base System Configuration (Timezone & Avahi)
    # --------------------------------------------------------------------------
    - name: Ensure timezone is set to America/New_York
      community.general.timezone:
        name: America/New_York
      notify: Restart avahi-daemon 

    - name: Ensure Avahi hostname configuration directory exists
      ansible.builtin.file:
        path: /etc/avahi/avahi-daemon.conf.d
        state: directory
        mode: '0755'

    - name: Ensure Avahi hostname config file is present
      ansible.builtin.copy:
        dest: /etc/avahi/avahi-daemon.conf.d/10-hostname.conf
        content: |
          [server]
          host-name=pxserveconfig

          [publish]
          publish-hinfo=yes
          publish-workstation=yes
        owner: root
        group: root
        mode: '0644'
      notify: Restart avahi-daemon # Notify handler if file changes

    # --- Task to disable IPv6 in main Avahi config
    - name: Disable IPv6 in main Avahi config
      ansible.builtin.lineinfile:
        path: /etc/avahi/avahi-daemon.conf
        regexp: '^use-ipv6=' # Match lines starting with use-ipv6=
        line: 'use-ipv6=no'  # Ensure the line is exactly this
        insertafter: '^\\[server\\]' # Place it after the [server] line
        owner: root
        group: root
        mode: '0644'
      notify: Restart avahi-daemon # Restart Avahi if this setting is changed

    # --------------------------------------------------------------------------
    # Docker Installation
    # --------------------------------------------------------------------------
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes
      register: docker_install_result
      until: docker_install_result is succeeded
      retries: 5
      delay: 15

    - name: Make sure Docker service is running and enabled
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add deployment user to docker group for non-sudo docker commands
      user:
        name: "{{ ansible_user | default('eric') }}" # Using 'eric' as default if ansible_user isn't defined
        groups: docker
        append: yes

    # --------------------------------------------------------------------------
    # Application Deployment - Ensuring Clean State
    # --------------------------------------------------------------------------
    - name: Remove existing application directory to ensure clean deploy
      file:
        path: "{{ app_dir }}"
        state: absent

    - name: Create application directory (freshly, after removal)
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: "{{ ansible_user | default('eric') }}" # Using 'eric' as default
        group: "{{ ansible_user | default('eric') }}" # Using 'eric' as default
        mode: '0755'

    - name: Create config directory
      file:
        path: "{{ config_dir }}"
        state: directory
        owner: "{{ ansible_user | default('eric') }}" # Using 'eric' as default
        group: "{{ ansible_user | default('eric') }}" # Using 'eric' as default
        mode: '0755'

    - name: Copy application files from local source to remote host
      copy:
        src: "{{ app_source_dir }}"
        dest: "{{ app_dir }}/"
        owner: "{{ ansible_user | default('eric') }}" # Using 'eric' as default
        group: "{{ ansible_user | default('eric') }}" # Using 'eric' as default
        mode: '0644'

    - name: Copy config files to volume directory
      copy:
        src: "{{ config_source_dir }}"
        dest: "{{ config_dir }}/"
        owner: "{{ ansible_user | default('eric') }}" # Using 'eric' as default
        group: "{{ ansible_user | default('eric') }}" # Using 'eric' as default
        mode: '0644'

    # --------------------------------------------------------------------------
    # Docker Build and Run
    # --------------------------------------------------------------------------
    - name: Build Docker image for serve_config from the deployed code
      community.docker.docker_image:
        name: serve_config:latest
        source: build
        build:
          path: "{{ app_dir }}"
      become: yes # Explicit become here might be redundant but safe

    - name: Stop and remove existing container (if any) and run new one
      community.docker.docker_container:
        name: serve_config
        image: serve_config:latest
        state: started
        recreate: yes # Ensures changes in image/config are applied
        restart_policy: unless-stopped
        published_ports:
          - "5000:5000"
        volumes:
          # Mount the config directory read-only into the container
          - "{{ config_dir }}:/app/config_files:ro"
      become: yes # Explicit become here might be redundant but safe

  # --------------------------------------------------------------------------
  # Handlers
  # --------------------------------------------------------------------------
  # Handlers are only run if notified by a task, and only once per play execution
  handlers:
    - name: Restart avahi-daemon
      ansible.builtin.systemd:
        name: avahi-daemon
        state: restarted
        daemon_reload: yes # Ensure systemd re-reads config if needed
      listen: Restart avahi-daemon # Explicitly listen for the notification topic